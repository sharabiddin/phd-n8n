services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-data:/data
    command:
      # API and dashboard
      - --api.dashboard=true
      - --api.insecure=true
      # Docker provider
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      # Entrypoints
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # HTTP to HTTPS redirect
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      # Let's Encrypt
      - --certificatesresolvers.letsencrypt.acme.email=admin@sharpy.dev
      - --certificatesresolvers.letsencrypt.acme.storage=/data/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      # Logging
      - --log.level=INFO
      - --accesslog=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.phd.sharpy.dev`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    networks:
      - n8n-network

  n8n:
    image: n8nio/n8n:1.117.0
    container_name: n8n
    restart: always
    environment:
      - NODE_ENV=production
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD:-password}
      - N8N_HOST=phd.sharpy.dev
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - WEBHOOK_URL=https://phd.sharpy.dev/
      - N8N_SECURE_COOKIE=true
      - N8N_OAUTH_CALLBACK_BASE_URL=https://phd.sharpy.dev/
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE:-UTC}
      - DATABASE_TYPE=${DATABASE_TYPE:-postgresdb}
      - DB_POSTGRESDB_DATABASE=${DB_POSTGRESDB_DATABASE}
      - DB_POSTGRESDB_HOST=${DB_POSTGRESDB_HOST}
      - DB_POSTGRESDB_PORT=${DB_POSTGRESDB_PORT:-5432}
      - DB_POSTGRESDB_USER=${DB_POSTGRESDB_USER}
      - DB_POSTGRESDB_PASSWORD=${DB_POSTGRESDB_PASSWORD}
      - DB_POSTGRESDB_SCHEMA=${DB_POSTGRESDB_SCHEMA:-public}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_USER_MANAGEMENT_JWT_SECRET}
      - N8N_CORS_ORIGIN=${N8N_CORS_ORIGIN:-*}
      - N8N_CORS_CREDENTIALS=${N8N_CORS_CREDENTIALS:-false}
      - N8N_TRUST_PROXY=${N8N_TRUST_PROXY:-true}
      - N8N_PROXY_HOPS=${N8N_PROXY_HOPS:-1}
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=${N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS:-false}
      - N8N_DISABLE_UI_RATE_LIMITING=${N8N_DISABLE_UI_RATE_LIMITING:-false}
      - N8N_RUNNERS_ENABLED=${N8N_RUNNERS_ENABLED:-false}
      - DB_SQLITE_POOL_SIZE=${DB_SQLITE_POOL_SIZE:-0}
      - N8N_BLOCK_ENV_ACCESS_IN_NODE=${N8N_BLOCK_ENV_ACCESS_IN_NODE:-false}
      - N8N_GIT_NODE_DISABLE_BARE_REPOS=${N8N_GIT_NODE_DISABLE_BARE_REPOS:-false}
      - N8N_AI_ENABLED=${N8N_AI_ENABLED:-true}
      - N8N_NODE_TYPE_DISCOVERY=${N8N_NODE_TYPE_DISCOVERY:-true}
    volumes:
      - n8n_data:/home/node/.n8n
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`phd.sharpy.dev`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.tls.certresolver=letsencrypt"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
      # WebSocket support
      - "traefik.http.routers.n8n.middlewares=n8n-headers"
      - "traefik.http.middlewares.n8n-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.n8n-headers.headers.customrequestheaders.X-Forwarded-For={ClientIP}"
    depends_on:
      - postgres
      - traefik
    networks:
      - n8n-network

  postgres:
    image: postgres:13
    container_name: n8n-postgres
    restart: always
    environment:
      - POSTGRES_DB=${DB_POSTGRESDB_DATABASE:-n8n}
      - POSTGRES_USER=${DB_POSTGRESDB_USER:-n8n}
      - POSTGRES_PASSWORD=${DB_POSTGRESDB_PASSWORD:-n8n}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - n8n-network

volumes:
  n8n_data:
  postgres_data:
  traefik-data:

networks:
  n8n-network:
    driver: bridge